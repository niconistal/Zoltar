package testCases;

import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;

import junit.framework.TestCase;



public class TestComposite {
	private LinkedList<Class<? extends TestCase>> classList ;

	public TestComposite() {
	   classList = new LinkedList<Class<? extends TestCase>>();
	}
	
	public void addTest( Class<? extends TestCase> testClass) {
		classList.add(testClass) ;
	}
	public void executeAllTest(){
		while ( classList.size() > 0){
			try {
				
				
				
				executeTest();
				
				
				
			} catch (IllegalArgumentException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (SecurityException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (InstantiationException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (InvocationTargetException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (NoSuchMethodException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	private void executeTest() throws IllegalArgumentException, SecurityException, InstantiationException, IllegalAccessException, InvocationTargetException, NoSuchMethodException{
		Class<? extends TestCase> test = classList.
			test.getConstructor().newInstance().run() ;
		
	}
	

}
